
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/nginx/ssl
    depends_on:
      - web
    restart: always

  web:
    build: .
    env_file: .env
    ports:
      - "8500:8000"
    volumes:
      - ./dbre_BE:/app/dbre_BE
    working_dir: /app
    command: poetry run gunicorn --bind 0.0.0.0:8000 dbre_BE.wsgi:application

    environment:
      - ./staticfiles:/app/staticfiles
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - DJANGO_SETTINGS_MODULE=dbre_BE.settings
      - PYTHONPATH=/app:/app/dbre_BE

    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5555:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6666:6379"
    restart: always


volumes:
  postgres_data:
