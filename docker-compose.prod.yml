services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
#      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
      - ./staticfiles:/app/staticfiles
    depends_on:
      - web
    networks:
      - dbre_network
    restart: always

  web:
    build: .
    env_file: .env.prod
    volumes:
      - ./dbre_BE:/app/dbre_BE
      - ./staticfiles:/app/staticfiles
    working_dir: /app
    command: poetry run gunicorn --bind 0.0.0.0:8000 dbre_BE.wsgi:application
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - REDIS_URL=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=dbre_BE.settings.prod
      - PYTHONPATH=/app:/app/dbre_BE
      - DJANGO_ENV=prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - dbre_network
    restart: always

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - dbre_network
    restart: always

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dbre_network
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - dbre_network

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    networks:
      - dbre_network

volumes:
  postgres_data:

networks:
  dbre_network:
    driver: bridge